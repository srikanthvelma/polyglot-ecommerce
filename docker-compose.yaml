version: "3.9"

networks:
  polyglot-net:

services:
  # ========== AUTH SERVICE ==========
  auth-db:
    image: mongo:7
    container_name: auth-db
    networks:
      - polyglot-net
    volumes:
      - auth-db-data:/data/db
      - ./seed/auth/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"

  auth-service:
    build: ./services/auth-service
    image: polyglot-shop/auth-service:latest
    container_name: auth-service
    depends_on:
      - auth-db
    networks:
      - polyglot-net
    environment:
      MONGO_URI: mongodb://auth-db:27017/authdb
      JWT_SECRET: supersecret
    ports:
      - "8001:8001"

  # ========== PRODUCT SERVICE ==========
  product-db:
    image: mysql:8
    container_name: product-db
    networks:
      - polyglot-net
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: productdb
      MYSQL_USER: productuser
      MYSQL_PASSWORD: productpass
    volumes:
      - product-db-data:/var/lib/mysql
      - ./seed/product/products.sql:/docker-entrypoint-initdb.d/products.sql:ro
    ports:
      - "3306:3306"

  product-service:
    build: ./services/product-service
    image: polyglot-shop/product-service:latest
    container_name: product-service
    depends_on:
      - product-db
    networks:
      - polyglot-net
    environment:
      DB_HOST: product-db
      DB_NAME: productdb
      DB_USER: productuser
      DB_PASS: productpass
    ports:
      - "8002:8002"

  # ========== ORDER SERVICE ==========
  order-db:
    image: postgres:16
    container_name: order-db
    networks:
      - polyglot-net
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespass
      
    volumes:
      - order-db-data:/var/lib/postgresql/data
      - ./seed/order/orders.sql:/docker-entrypoint-initdb.d/orders.sql:ro
    ports:
      - "5433:5432"

  order-service:
    build: ./services/order-service
    image: polyglot-shop/order-service:latest
    container_name: order-service
    depends_on:
      - order-db
    networks:
      - polyglot-net
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespass
    ports:
      - "8003:8003"

  # ========== PAYMENT SERVICE ==========
  payment-db:
    image: redis:7-alpine
    container_name: payment-db
    ports:
      - "6379:6379"
    volumes:
      - ./seed/payment/payments.json:/data/payments.json
      - ./seed/payment/init-redis.sh:/docker-entrypoint-initdb.d/init-redis.sh:ro
    command: [ "sh", "-c", "redis-server --daemonize yes && sleep 2 && sh /docker-entrypoint-initdb.d/init-redis.sh && tail -f /dev/null" ]
    networks:
      - polyglot-net


  payment-service:
    build: ./services/payment-service
    image: polyglot-shop/payment-service:latest
    container_name: payment-service
    depends_on:
      - payment-db
    networks:
      - polyglot-net
    environment:
      REDIS_HOST: payment-db
    ports:
      - "8004:8004"

  # ========== INVENTORY SERVICE ==========
  inventory-db:
    image: mysql:8
    container_name: inventory-db
    networks:
      - polyglot-net
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: inventorydb
      MYSQL_USER: inventoryuser
      MYSQL_PASSWORD: inventorypass
    volumes:
      - inventory-db-data:/var/lib/mysql
      - ./seed/inventory/inventory.sql:/docker-entrypoint-initdb.d/inventory.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"

  inventory-service:
    build: ./services/inventory-service
    image: polyglot-shop/inventory-service:latest
    container_name: inventory-service
    depends_on:
      - inventory-db
    networks:
      - polyglot-net
    environment:
      DB_HOST: inventory-db
      DB_NAME: inventorydb
      DB_USER: inventoryuser
      DB_PASS: inventorypass
    ports:
      - "8005:8005"

  # ========== SHIPPING SERVICE ==========
  shipping-db:
    image: postgres:16
    container_name: shipping-db
    networks:
      - polyglot-net
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespass
      POSTGRES_DB: shippingdb
    volumes:
      - shipping-db-data:/var/lib/postgresql/data
      - ./seed/shipping/shipping.sql:/docker-entrypoint-initdb.d/shipping.sql:ro
    ports:
      - "5434:5432"

  shipping-service:
    build: ./services/shipping-service
    image: polyglot-shop/shipping-service:latest
    container_name: shipping-service
    depends_on:
      - shipping-db
    networks:
      - polyglot-net
    environment:
      DB_HOST: shipping-db
      DB_NAME: shippingdb
      DB_USER: shippinguser
      DB_PASS: shippingpass
    ports:
      - "8006:8006"


  # ========== FRONTEND ==========
  frontend:
  build: ./services/frontend
  image: polyglot-shop/frontend:latest
  container_name: frontend
  depends_on:
    - auth-service
    - product-service
    - order-service
    - payment-service
    - inventory-service
    - shipping-service
  networks:
    - polyglot-net
  environment:
    - REACT_APP_AUTH_URL=http://auth-service:8001
    - REACT_APP_PRODUCT_URL=http://product-service:8002
    - REACT_APP_ORDER_URL=http://order-service:8003
    - REACT_APP_PAYMENT_URL=http://payment-service:8004
    - REACT_APP_INVENTORY_URL=http://inventory-service:8005
    - REACT_APP_SHIPPING_URL=http://shipping-service:8006
  ports:
    - "3000:3000"

volumes:
  auth-db-data:
  product-db-data:
  order-db-data:
  inventory-db-data:
  shipping-db-data:
